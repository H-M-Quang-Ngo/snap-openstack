[tox]
envlist = unit,pep8,mypy
skipsdist = True
# Automatic envs (pyXX) will only use the python version appropriate to that
# env and ignore basepython inherited from [testenv] if we set
# ignore_basepython_conflict.
ignore_basepython_conflict = True

[vars]
src_path = {toxinidir}/
tst_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]tst_path}
uv_flags = --frozen --isolated --extra=dev

[testenv]
usedevelop = True
basepython = python3
allowlist_externals =
    uv
setenv = OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=60

[testenv:unit]
description = Sunbeam unit tests
commands = uv run {[vars]uv_flags} python -m pytest -vv tests/unit {posargs}

# The functional tests may have specific hardware requirements and are currently
# skipped by default.
[testenv:functional]
description = Sunbeam functional tests
# The snap can't access /tmp, we'll need to place manifests and other temporary
# files in the home directory. At the same time, we need to expose USER/LOGNAME,
# otherwise the Sunbeam group won't be initialized correctly and the Sunbeam
# commands will fail due to missing privileges.
passenv = USER
          LOGNAME
          USERNAME
          HOME
commands = uv run {[vars]uv_flags} \
  python -m pytest -s -vv tests/functional/local \
  --basetemp={env:HOME}/.local/share/openstack/tmp \
  {posargs}

[testenv:fmt]
description = Apply coding style standards to code
deps =
    ruff
commands =
  ruff check --select I --fix {[vars]all_path} # run isort
  ruff format {[vars]all_path}

[testenv:pep8]
deps =
  ruff
commands =
  ruff format --diff {[vars]all_path}
  ruff check {[vars]all_path}

[testenv:mypy]
commands =
  uv run {[vars]uv_flags} mypy {[vars]src_path}/sunbeam
  # TODO: consider uncommenting the following line once
  # the unit tests pass the mypy check.
  #   uv run {[vars]uv_flags} mypy {[vars]tst_path}/unit
  uv run {[vars]uv_flags} mypy {[vars]tst_path}/functional

[testenv:cover]
setenv =
    VIRTUAL_ENV={envdir}
commands =
    uv run {[vars]uv_flags} coverage erase
    uv run {[vars]uv_flags} coverage run -m pytest {posargs}
    uv run {[vars]uv_flags} coverage html -d cover
    uv run {[vars]uv_flags} coverage xml -o cover/coverage.xml
    uv run {[vars]uv_flags} coverage report

[testenv:debug]
passenv = OS_*
commands =
    uv run {[vars]uv_flags} oslo_debug_helper -t sunbeam/tests {posargs}

[testenv:docs]
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d doc/build/doctrees -b html doc/source doc/build/html
  sphinx-build -a -E -W -d doc/build/doctrees -b man doc/source doc/build/man
  # Validate redirects (must be done after the docs build
  whereto doc/build/html/.htaccess doc/test/redirect-tests.txt

[testenv:releasenotes]
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lock]
description = Update lock file
commands =
    uv lock --upgrade --no-cache
